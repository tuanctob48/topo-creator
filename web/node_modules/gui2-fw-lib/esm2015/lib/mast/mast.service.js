/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/*
 * Copyright 2018-present Open Networking Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { FnService } from '../util/fn.service';
import { LogService } from '../log.service';
import * as i0 from "@angular/core";
import * as i1 from "../util/fn.service";
import * as i2 from "../log.service";
/** @type {?} */
const PADMOBILE = 16;
/**
 * ONOS GUI -- Masthead Service
 */
export class MastService {
    /**
     * @param {?} fs
     * @param {?} log
     */
    constructor(fs, log) {
        this.fs = fs;
        this.log = log;
        this.mastHeight = 48;
        if (this.fs.isMobile()) {
            this.mastHeight += PADMOBILE;
        }
        this.log.debug('MastService constructed');
    }
}
MastService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] },
];
/** @nocollapse */
MastService.ctorParameters = () => [
    { type: FnService },
    { type: LogService }
];
/** @nocollapse */ MastService.ngInjectableDef = i0.defineInjectable({ factory: function MastService_Factory() { return new MastService(i0.inject(i1.FnService), i0.inject(i2.LogService)); }, token: MastService, providedIn: "root" });
if (false) {
    /** @type {?} */
    MastService.prototype.mastHeight;
    /** @type {?} */
    MastService.prototype.fs;
    /** @type {?} */
    MastService.prototype.log;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzdC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZ3VpMi1mdy1saWIvIiwic291cmNlcyI6WyJsaWIvbWFzdC9tYXN0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7TUFFdEMsU0FBUyxHQUFHLEVBQUU7Ozs7QUFRcEIsTUFBTSxPQUFPLFdBQVc7Ozs7O0lBSXRCLFlBQ1UsRUFBYSxFQUNiLEdBQWU7UUFEZixPQUFFLEdBQUYsRUFBRSxDQUFXO1FBQ2IsUUFBRyxHQUFILEdBQUcsQ0FBWTtRQUpsQixlQUFVLEdBQUcsRUFBRSxDQUFDO1FBTXJCLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsVUFBVSxJQUFJLFNBQVMsQ0FBQztTQUNoQztRQUVELElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDNUMsQ0FBQzs7O1lBaEJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7OztZQVZRLFNBQVM7WUFDVCxVQUFVOzs7OztJQVlqQixpQ0FBdUI7O0lBR3JCLHlCQUFxQjs7SUFDckIsMEJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE4LXByZXNlbnQgT3BlbiBOZXR3b3JraW5nIEZvdW5kYXRpb25cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZuU2VydmljZSB9IGZyb20gJy4uL3V0aWwvZm4uc2VydmljZSc7XG5pbXBvcnQgeyBMb2dTZXJ2aWNlIH0gZnJvbSAnLi4vbG9nLnNlcnZpY2UnO1xuXG5jb25zdCBQQURNT0JJTEUgPSAxNjtcblxuLyoqXG4gKiBPTk9TIEdVSSAtLSBNYXN0aGVhZCBTZXJ2aWNlXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBNYXN0U2VydmljZSB7XG5cbiAgcHVibGljIG1hc3RIZWlnaHQgPSA0ODtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGZzOiBGblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBsb2c6IExvZ1NlcnZpY2VcbiAgKSB7XG4gICAgaWYgKHRoaXMuZnMuaXNNb2JpbGUoKSkge1xuICAgICAgICB0aGlzLm1hc3RIZWlnaHQgKz0gUEFETU9CSUxFO1xuICAgIH1cblxuICAgIHRoaXMubG9nLmRlYnVnKCdNYXN0U2VydmljZSBjb25zdHJ1Y3RlZCcpO1xuICB9XG5cbn1cbiJdfQ==