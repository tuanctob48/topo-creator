/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/*
 * Copyright 2018-present Open Networking Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input } from '@angular/core';
import { IconService, glyphMapping } from '../icon.service';
import { LogService } from '../../log.service';
/**
 * Icon Component
 *
 * Note: This is an alternative to the Icon Directive from ONOS 1.0.0
 * It has been implemented as a Component because it was inadvertently adding
 * in a template through d3 DOM manipulations - it's better to make it a Comp
 * and build a template the Angular 7 way
 *
 * Remember: The CSS files applied here only apply to this component
 */
export class IconComponent {
    /**
     * @param {?} is
     * @param {?} log
     */
    constructor(is, log) {
        this.is = is;
        this.log = log;
        this.iconSize = 20;
        this.toolTip = undefined;
        this.classes = undefined;
        // The displayed tooltip - undefined until mouse hovers over, then equals toolTip
        this.toolTipDisp = undefined;
        // Note: iconId is not available until initialization
        this.log.debug('IconComponent constructed');
    }
    /**
     * Icons are loaded in to the DOM under iconDefs
     * @return {?}
     */
    ngOnInit() {
        this.is.loadIconDef(this.iconId);
    }
    /**
     * This is needed in case the iconId changes while icon component
     * is displayed on screen.
     * @return {?}
     */
    ngOnChanges() {
        this.is.loadIconDef(this.iconId);
    }
    /**
     * Get the corresponding iconTag from the glyphMapping in the iconService
     * @return {?} The iconTag corresponding to the iconId of this instance
     */
    iconTag() {
        /** @type {?} */
        const iconIdStr = glyphMapping.get(this.iconId);
        if (iconIdStr) {
            return '#' + iconIdStr;
        }
        else {
            return '#' + this.iconId;
        }
    }
}
IconComponent.decorators = [
    { type: Component, args: [{
                selector: 'onos-icon',
                template: `<!--
~ Copyright 2018-present Open Networking Foundation
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~     http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<div class="tooltip">
<svg class="embeddedIcon" [attr.width]="iconSize" [attr.height]="iconSize" viewBox="0 0 50 50" (mouseover)="toolTipDisp = toolTip" (mouseout)="toolTipDisp = undefined">
    <g class="icon" [ngClass]="classes">
        <rect width="50" height="50" rx="5"></rect>
        <use width="50" height="50" class="glyph" [attr.href]="iconTag()"></use>
    </g>
</svg>
<!-- I'm fixing class as light as view encapsulation changes how the hirerarchy of css is handled -->

<!-- <p id="tooltip" class="light" *ngIf="toolTip" [ngStyle]="{ 'display': toolTipDisp ? 'inline-block':'none'}">{{ toolTipDisp }}</p> -->

    <span class="tooltiptext" [ngStyle]="{ 'display': toolTipDisp ? 'inline-block':'none'}">{{toolTipDisp}}</span>
</div>
`,
                styles: [`svg#IconLibDefs{display:none}svg .svgIcon{fill-rule:evenodd}svg.embeddedIcon g.icon{fill:none}.ctrl-btns div svg.embeddedIcon g.icon use{fill:#e0dfd6}.ctrl-btns div.active svg.embeddedIcon g.icon use{fill:#939598}.ctrl-btns div.active:hover svg.embeddedIcon g.icon use{fill:#ce5b58}.ctrl-btns div.current-view svg.embeddedIcon g.icon rect{fill:#518ecc}.ctrl-btns div.current-view svg.embeddedIcon g.icon use{fill:#fff}svg.embeddedIcon .icon.active .glyph{fill:#04bf34}svg.embeddedIcon .icon.inactive .glyph{fill:#c0242b}svg.embeddedIcon .icon.active-rect .glyph{fill:#939598}svg.embeddedIcon .icon.active-sort .glyph{fill:#333}svg.embeddedIcon g.icon.active-rect:hover use{fill:#ce5b58}svg.embeddedIcon g.icon.active-type .glyph{fill:#3c3a3a}svg.embeddedIcon g.icon.active-close:hover use{fill:#ce5b58}svg.embeddedIcon g.icon.active-close .glyph{fill:#333}svg.embeddedIcon g.icon.details-icon .glyph{fill:#0071bd}`, `div.close-btn svg.embeddedIcon g.icon .glyph{fill:#333}div.tableColSort svg.embeddedIcon .icon .glyph{fill:#353333;fill:#888}svg.embeddedIcon g.icon use{fill:#e0dfd6}.ctrl-btns div.active svg.embeddedIcon g.icon use{fill:#939598}svg.embeddedIcon g.icon.active:hover use{fill:#ce5b58}svg.embeddedIcon g.icon.current-view rect{fill:#518ecc}svg.embeddedIcon g.icon.current-view use{fill:#fff}svg.embeddedIcon g.icon.refresh use{fill:#cdeff2}svg.embeddedIcon g.icon.refresh:hover use{fill:#ce5b58}svg.embeddedIcon g.icon.refresh.active use{fill:#009fdb}svg.embeddedIcon g.icon.refresh.active:hover use{fill:#ce5b58}div.close-btn svg.embeddedIcon g.icon .glyph{fill:#8d8d8d}table svg.embeddedIcon .icon .glyph{fill:#99a}svg.embeddedIcon g.icon.devIcon_SWITCH .glyph,svg.embeddedIcon g.icon.hostIcon_endstation .glyph{fill:#0071bd}`, `svg .glyph{stroke:none;fill-rule:evenodd}`, `.dark svg .glyph,.dark svg .glyph.overlay,.light svg .glyph,.light svg .glyph.overlay{fill:#00f}`, `#tooltip{text-align:center;font-size:80%;border:1px solid;padding:5px;position:absolute;z-index:5000;display:inline-block;pointer-events:none;top:40px;right:auto}.tooltip{position:relative;display:inline-block}.tooltip .tooltiptext{display:inline-block;visibility:hidden;background-color:#dbeffc;color:#3c3a3a;border-color:#c7c7c0;text-align:center;border-radius:6px;font-size:80%;padding:5px;position:absolute;z-index:5000;top:42px;right:10%;white-space:nowrap}.tooltip:hover .tooltiptext{visibility:visible}`, `svg.embeddedIcon .radioButton.selected .icon rect,svg.embeddedIcon .toggleButton.selected .icon rect{fill:#e4f0f6}svg.embeddedIcon .button:hover .icon rect{stroke:#000;stroke-width:1px}svg.embeddedIcon .toggleButton.selected:hover .icon rect{fill:#c0d8f0;stroke:#000;stroke-width:1px}svg.embeddedIcon .button .glyph,svg.embeddedIcon .radioButton.selected .glyph,svg.embeddedIcon .toggleButton.selected .glyph{fill:#5b99d2}svg.embeddedIcon .icon.radioButton:hover:not(.selected) rect,svg.embeddedIcon .icon.toggleButton:hover rect{fill:#e4f0f6;stroke:#000;stroke-width:1px}svg.embeddedIcon .radioButton .glyph,svg.embeddedIcon .toggleButton .glyph{fill:#bbb}svg.embeddedIcon .radioButton:hover:not(.selected) .glyph,svg.embeddedIcon .toggleButton:hover:not(.selected) .glyph{fill:#5b99d2}.dark .radioButton.selected svg.embeddedIcon .icon rect,.dark .toggleButton.selected svg.embeddedIcon .icon rect{fill:#353e45}.dark .button:hover svg.embeddedIcon .icon rect{stroke:#fff;stroke-width:1px}.dark .toggleButton.selected:hover svg.embeddedIcon .icon rect{fill:#444d54;stroke:#fff;stroke-width:1px}.dark .button svg.embeddedIcon .glyph,.dark .radioButton.selected svg.embeddedIcon .glyph,.dark .toggleButton.selected svg.embeddedIcon .glyph{fill:#5b99d2}.dark .radioButton:hover:not(.selected) svg.embeddedIcon .icon rect,.dark .toggleButton:hover svg.embeddedIcon .icon rect{fill:#353e45;stroke:#fff;stroke-width:1px}.dark .radioButton svg.embeddedIcon .glyph,.dark .toggleButton svg.embeddedIcon .glyph{fill:#bbb}.dark .radioButton:hover:not(.selected) svg.embeddedIcon .glyph,.dark .toggleButton:hover:not(.selected) svg.embeddedIcon .glyph{fill:#5b99d2}`]
            },] },
];
/** @nocollapse */
IconComponent.ctorParameters = () => [
    { type: IconService },
    { type: LogService }
];
IconComponent.propDecorators = {
    iconId: [{ type: Input }],
    iconSize: [{ type: Input }],
    toolTip: [{ type: Input }],
    classes: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    IconComponent.prototype.iconId;
    /** @type {?} */
    IconComponent.prototype.iconSize;
    /** @type {?} */
    IconComponent.prototype.toolTip;
    /** @type {?} */
    IconComponent.prototype.classes;
    /** @type {?} */
    IconComponent.prototype.toolTipDisp;
    /** @type {?} */
    IconComponent.prototype.is;
    /** @type {?} */
    IconComponent.prototype.log;
}
//# sourceMappingURL=data:application/json;base64,