import { FnService } from './fn.service';
import { LogService } from '../log.service';
import { WebSocketService } from '../remote/websocket.service';
/**
 * ONOS GUI -- Util -- User Preference Service
 */
export declare class PrefsService {
    protected fs: FnService;
    protected log: LogService;
    protected wss: WebSocketService;
    private window;
    protected handlers: string[];
    cache: Object;
    listeners: ((data: any) => void)[];
    constructor(fs: FnService, log: LogService, wss: WebSocketService, window: any);
    setPrefs(name: string, obj: Object): void;
    updatePrefs(data: any): void;
    asNumbers(obj: any, keys?: any, not?: any): any;
    getPrefs(name: string, defaults: Object, qparams?: string): any;
    mergePrefs(name: string, obj: any): void;
    /**
     * Add a listener function
     * This will get called back when an 'updatePrefs' message is received on WSS
     * @param listener a function that can accept one param - data
     */
    addListener(listener: (data: any) => void): void;
    removeListener(listener: (data: any) => void): void;
}
