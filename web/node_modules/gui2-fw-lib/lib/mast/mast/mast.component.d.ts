import { OnInit, OnDestroy, NgZone } from '@angular/core';
import { Router } from '@angular/router';
import { LionService } from '../../util/lion.service';
import { LogService } from '../../log.service';
import { NavService } from '../../nav/nav.service';
import { WebSocketService } from '../../remote/websocket.service';
/**
 * ONOS GUI -- Masthead Component
 */
export declare class MastComponent implements OnInit, OnDestroy {
    private lion;
    private log;
    ns: NavService;
    private wss;
    private router;
    private zone;
    private window;
    username: string;
    lionFn: any;
    viewMap: Map<string, string>;
    confirmMessage: string;
    strongWarning: string;
    constructor(lion: LionService, log: LogService, ns: NavService, wss: WebSocketService, router: Router, zone: NgZone, window: any);
    ngOnInit(): void;
    /**
     * Nav component should never be closed, but in case it does, it's
     * safer to tidy up after itself
     */
    ngOnDestroy(): void;
    /**
    * Read the LION bundle for App and set up the lionFn
    */
    doLion(): void;
    /**
    * A dummy implementation of the lionFn until the response is received and the LION
    * bundle is received from the WebSocket
    */
    dummyLion(key: string): string;
    directTo(): void;
    triggerRefresh(data: any, added: boolean): void;
    /**
     * Callback when the Confirm dialog is shown and a choice is made
     */
    dOk(choice: boolean): void;
}
